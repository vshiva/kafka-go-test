syntax = "proto3";

package types;

option go_package = "types";

message AdminInformation {
    // Username of the administrator associated with this service.
    string admin_username = 1;
  
    // (Optional) Password of the administrator associated with this service.
    string admin_password = 2;
  
    // Email of the administrator associated with this service.
    string admin_email = 3;
  
    // First Name of the administrator associated with this service.
    string admin_first_name = 4;
  
    // Last Name of the administrator associated with this service.
    string admin_last_name = 5;
}
  
message Resource {
  // Name of a meterable resource.
  string name = 1;

  // (Optional) purchased amount of a meterable resource.
  double purchased_amount = 2;

  // Start date of a meterable resource as a W3C string. 
  string start_date = 3;

  // (Optional) End date of a meterable resource as a W3C string. Only sent if this is a subscription.
  string end_date = 4;
}

message ServicePropertyBean {

  // Key of the property
  string key = 1;

  // Value of the property
  string value = 2;
}
  
message ServiceMessage {
  
    // Optional: The Id of the account if different from account name.
    string account_id = 1;

    // (Optional) operation based on request type e.g. acquire_relocation_lock. Possible values are disable_access (disable all), enable_access, acquire_relocation_lock, relocate, release_relocation_lock
    string operation = 2;

    // The region where the account was created.
    string region = 3;

    // (Optional)Information on Suspend Reason. This is base-64 encoded XML.
    string suspend_reason = 4;

    // (Optional) administration information for newly enabled accounts.
    AdminInformation admin_information = 5;

    // List of resources (if any).
    repeated Resource resources = 6;

    repeated ServicePropertyBean property = 7;
}
  
  message ResponseMessage {
    
      // (Required) Status Response of the operation. This is a string value which is one of COMPLETED, IGNORED, REJECTED, PENDING.
      string status = 1;
  
      // (Required) The time this request was processed in milliseconds.
      int64 completion_time = 2;
  
      // (Optional) Error Code if this request was rejected.
      string error_code = 3;
  
      // (Optional) Error Text if this request was rejected.
      string error_text = 4;
  
      // (Optional) URI for service specific information (included in the email).
      string admin_uri = 5;
    }
  
    message TasProtocol {
      // Unique identifier which pairs the request to the response. This is set for ServiceMessages
      // and should be set on the corresponding ResponseMessage
      string uuid = 1;
  
      // The type of request received from TAS: CREATE, RESUME, SUSPEND, UPDATE_USER, TERMINATE, DESTROY 
      string request = 2;
  
      // The name of the user's account.
      string account_name = 3;
  
      // The service type, e.g. Registry. This also corresponds to the kafka topic the message
      // was sent on.
      string service_type = 4;
  
      // The service message if the message was sent from the TAS Service Manager.
      ServiceMessage service_message = 5;
  
      // The response message sent to the TAS Service Manager.
      ResponseMessage response_message = 6;
    }