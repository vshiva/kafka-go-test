// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tas.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	tas.proto

It has these top-level messages:
	AdminInformation
	Resource
	ServicePropertyBean
	ServiceMessage
	ResponseMessage
	TasProtocol
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AdminInformation struct {
	// Username of the administrator associated with this service.
	AdminUsername string `protobuf:"bytes,1,opt,name=admin_username,json=adminUsername" json:"admin_username,omitempty"`
	// (Optional) Password of the administrator associated with this service.
	AdminPassword string `protobuf:"bytes,2,opt,name=admin_password,json=adminPassword" json:"admin_password,omitempty"`
	// Email of the administrator associated with this service.
	AdminEmail string `protobuf:"bytes,3,opt,name=admin_email,json=adminEmail" json:"admin_email,omitempty"`
	// First Name of the administrator associated with this service.
	AdminFirstName string `protobuf:"bytes,4,opt,name=admin_first_name,json=adminFirstName" json:"admin_first_name,omitempty"`
	// Last Name of the administrator associated with this service.
	AdminLastName string `protobuf:"bytes,5,opt,name=admin_last_name,json=adminLastName" json:"admin_last_name,omitempty"`
}

func (m *AdminInformation) Reset()                    { *m = AdminInformation{} }
func (m *AdminInformation) String() string            { return proto.CompactTextString(m) }
func (*AdminInformation) ProtoMessage()               {}
func (*AdminInformation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AdminInformation) GetAdminUsername() string {
	if m != nil {
		return m.AdminUsername
	}
	return ""
}

func (m *AdminInformation) GetAdminPassword() string {
	if m != nil {
		return m.AdminPassword
	}
	return ""
}

func (m *AdminInformation) GetAdminEmail() string {
	if m != nil {
		return m.AdminEmail
	}
	return ""
}

func (m *AdminInformation) GetAdminFirstName() string {
	if m != nil {
		return m.AdminFirstName
	}
	return ""
}

func (m *AdminInformation) GetAdminLastName() string {
	if m != nil {
		return m.AdminLastName
	}
	return ""
}

type Resource struct {
	// Name of a meterable resource.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// (Optional) purchased amount of a meterable resource.
	PurchasedAmount float64 `protobuf:"fixed64,2,opt,name=purchased_amount,json=purchasedAmount" json:"purchased_amount,omitempty"`
	// Start date of a meterable resource as a W3C string.
	StartDate string `protobuf:"bytes,3,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	// (Optional) End date of a meterable resource as a W3C string. Only sent if this is a subscription.
	EndDate string `protobuf:"bytes,4,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetPurchasedAmount() float64 {
	if m != nil {
		return m.PurchasedAmount
	}
	return 0
}

func (m *Resource) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Resource) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type ServicePropertyBean struct {
	// Key of the property
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Value of the property
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ServicePropertyBean) Reset()                    { *m = ServicePropertyBean{} }
func (m *ServicePropertyBean) String() string            { return proto.CompactTextString(m) }
func (*ServicePropertyBean) ProtoMessage()               {}
func (*ServicePropertyBean) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServicePropertyBean) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ServicePropertyBean) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ServiceMessage struct {
	// Optional: The Id of the account if different from account name.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// (Optional) operation based on request type e.g. acquire_relocation_lock. Possible values are disable_access (disable all), enable_access, acquire_relocation_lock, relocate, release_relocation_lock
	Operation string `protobuf:"bytes,2,opt,name=operation" json:"operation,omitempty"`
	// The region where the account was created.
	Region string `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	// (Optional)Information on Suspend Reason. This is base-64 encoded XML.
	SuspendReason string `protobuf:"bytes,4,opt,name=suspend_reason,json=suspendReason" json:"suspend_reason,omitempty"`
	// (Optional) administration information for newly enabled accounts.
	AdminInformation *AdminInformation `protobuf:"bytes,5,opt,name=admin_information,json=adminInformation" json:"admin_information,omitempty"`
	// List of resources (if any).
	Resources []*Resource            `protobuf:"bytes,6,rep,name=resources" json:"resources,omitempty"`
	Property  []*ServicePropertyBean `protobuf:"bytes,7,rep,name=property" json:"property,omitempty"`
}

func (m *ServiceMessage) Reset()                    { *m = ServiceMessage{} }
func (m *ServiceMessage) String() string            { return proto.CompactTextString(m) }
func (*ServiceMessage) ProtoMessage()               {}
func (*ServiceMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ServiceMessage) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ServiceMessage) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *ServiceMessage) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ServiceMessage) GetSuspendReason() string {
	if m != nil {
		return m.SuspendReason
	}
	return ""
}

func (m *ServiceMessage) GetAdminInformation() *AdminInformation {
	if m != nil {
		return m.AdminInformation
	}
	return nil
}

func (m *ServiceMessage) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *ServiceMessage) GetProperty() []*ServicePropertyBean {
	if m != nil {
		return m.Property
	}
	return nil
}

type ResponseMessage struct {
	// (Required) Status Response of the operation. This is a string value which is one of COMPLETED, IGNORED, REJECTED, PENDING.
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// (Required) The time this request was processed in milliseconds.
	CompletionTime int64 `protobuf:"varint,2,opt,name=completion_time,json=completionTime" json:"completion_time,omitempty"`
	// (Optional) Error Code if this request was rejected.
	ErrorCode string `protobuf:"bytes,3,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	// (Optional) Error Text if this request was rejected.
	ErrorText string `protobuf:"bytes,4,opt,name=error_text,json=errorText" json:"error_text,omitempty"`
	// (Optional) URI for service specific information (included in the email).
	AdminUri string `protobuf:"bytes,5,opt,name=admin_uri,json=adminUri" json:"admin_uri,omitempty"`
}

func (m *ResponseMessage) Reset()                    { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string            { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()               {}
func (*ResponseMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResponseMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResponseMessage) GetCompletionTime() int64 {
	if m != nil {
		return m.CompletionTime
	}
	return 0
}

func (m *ResponseMessage) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *ResponseMessage) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func (m *ResponseMessage) GetAdminUri() string {
	if m != nil {
		return m.AdminUri
	}
	return ""
}

type TasProtocol struct {
	// Unique identifier which pairs the request to the response. This is set for ServiceMessages
	// and should be set on the corresponding ResponseMessage
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// The type of request received from TAS: CREATE, RESUME, SUSPEND, UPDATE_USER, TERMINATE, DESTROY
	Request string `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	// The name of the user's account.
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// The service type, e.g. Registry. This also corresponds to the kafka topic the message
	// was sent on.
	ServiceType string `protobuf:"bytes,4,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	// The service message if the message was sent from the TAS Service Manager.
	ServiceMessage *ServiceMessage `protobuf:"bytes,5,opt,name=service_message,json=serviceMessage" json:"service_message,omitempty"`
	// The response message sent to the TAS Service Manager.
	ResponseMessage *ResponseMessage `protobuf:"bytes,6,opt,name=response_message,json=responseMessage" json:"response_message,omitempty"`
}

func (m *TasProtocol) Reset()                    { *m = TasProtocol{} }
func (m *TasProtocol) String() string            { return proto.CompactTextString(m) }
func (*TasProtocol) ProtoMessage()               {}
func (*TasProtocol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TasProtocol) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *TasProtocol) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

func (m *TasProtocol) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *TasProtocol) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *TasProtocol) GetServiceMessage() *ServiceMessage {
	if m != nil {
		return m.ServiceMessage
	}
	return nil
}

func (m *TasProtocol) GetResponseMessage() *ResponseMessage {
	if m != nil {
		return m.ResponseMessage
	}
	return nil
}

func init() {
	proto.RegisterType((*AdminInformation)(nil), "types.AdminInformation")
	proto.RegisterType((*Resource)(nil), "types.Resource")
	proto.RegisterType((*ServicePropertyBean)(nil), "types.ServicePropertyBean")
	proto.RegisterType((*ServiceMessage)(nil), "types.ServiceMessage")
	proto.RegisterType((*ResponseMessage)(nil), "types.ResponseMessage")
	proto.RegisterType((*TasProtocol)(nil), "types.TasProtocol")
}

func init() { proto.RegisterFile("tas.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0xba, 0xed, 0xee, 0x66, 0xd2, 0x6e, 0x16, 0x03, 0x25, 0x7c, 0x89, 0x36, 0x12, 0x50,
	0x0e, 0xf4, 0x50, 0x24, 0x6e, 0x20, 0xb5, 0x14, 0xa4, 0x4a, 0x80, 0x56, 0x61, 0xb9, 0x70, 0x89,
	0x4c, 0x32, 0x2d, 0x11, 0x9b, 0x38, 0xd8, 0x4e, 0xe9, 0x9e, 0xe1, 0xef, 0xf0, 0x03, 0xf8, 0x1d,
	0xfc, 0x21, 0x64, 0x7b, 0x36, 0xc9, 0x22, 0x6e, 0xf6, 0x9b, 0x97, 0xf1, 0xf8, 0xbd, 0xe7, 0x80,
	0xaf, 0xb9, 0x3a, 0xac, 0xa5, 0xd0, 0x82, 0x6d, 0xe9, 0x65, 0x8d, 0x2a, 0xfe, 0xe3, 0xc1, 0xf4,
	0x38, 0x2f, 0x8b, 0xea, 0xac, 0x3a, 0x17, 0xb2, 0xe4, 0xba, 0x10, 0x15, 0x7b, 0x08, 0x13, 0x6e,
	0xb0, 0xb4, 0x51, 0x28, 0x2b, 0x5e, 0x62, 0xe4, 0xed, 0x79, 0x07, 0x7e, 0xb2, 0x63, 0xd1, 0x8f,
	0x04, 0x76, 0xb4, 0x9a, 0x2b, 0xf5, 0x5d, 0xc8, 0x3c, 0xda, 0xe8, 0xd1, 0x66, 0x04, 0xb2, 0x07,
	0x10, 0x38, 0x1a, 0x96, 0xbc, 0x58, 0x44, 0x03, 0xcb, 0x01, 0x0b, 0xbd, 0x36, 0x08, 0x3b, 0x80,
	0xa9, 0x23, 0x9c, 0x17, 0x52, 0xe9, 0xd4, 0x1e, 0xb8, 0x69, 0x59, 0xae, 0xff, 0x1b, 0x03, 0xbf,
	0x37, 0x27, 0x3e, 0x82, 0xd0, 0x31, 0x17, 0x7c, 0x45, 0xdc, 0xea, 0x1d, 0xf9, 0x96, 0x3b, 0x5e,
	0xfc, 0xc3, 0x83, 0x71, 0x82, 0x4a, 0x34, 0x32, 0x43, 0xc6, 0x60, 0xb3, 0x77, 0x07, 0xbb, 0x66,
	0x4f, 0x60, 0x5a, 0x37, 0x32, 0xfb, 0xc2, 0x15, 0xe6, 0x29, 0x2f, 0x45, 0x53, 0x69, 0x3b, 0xbc,
	0x97, 0x84, 0x2d, 0x7e, 0x6c, 0x61, 0x76, 0x1f, 0x40, 0x69, 0x2e, 0x75, 0x9a, 0x73, 0x8d, 0x34,
	0xbd, 0x6f, 0x91, 0x53, 0xae, 0x91, 0xdd, 0x86, 0x31, 0x56, 0xb9, 0x2b, 0xba, 0xa1, 0x47, 0x58,
	0xe5, 0xa6, 0x14, 0xbf, 0x80, 0xeb, 0x1f, 0x50, 0x5e, 0x16, 0x19, 0xce, 0xa4, 0xa8, 0x51, 0xea,
	0xe5, 0x09, 0xf2, 0x8a, 0x4d, 0x61, 0xf0, 0x15, 0x97, 0x34, 0x8e, 0x59, 0xb2, 0x1b, 0xb0, 0x75,
	0xc9, 0x17, 0x0d, 0x92, 0x7e, 0x6e, 0x13, 0xff, 0xde, 0x80, 0x09, 0x7d, 0xff, 0x0e, 0x95, 0xe2,
	0x17, 0x68, 0x66, 0xe1, 0x59, 0x66, 0xc6, 0x4a, 0x8b, 0x9c, 0x3a, 0xf8, 0x84, 0x9c, 0xe5, 0xec,
	0x1e, 0xf8, 0xe6, 0x1c, 0x6b, 0x22, 0xf5, 0xea, 0x00, 0xb6, 0x0b, 0x43, 0x89, 0x17, 0xa6, 0xe4,
	0x2e, 0x41, 0x3b, 0x63, 0xa3, 0x6a, 0x54, 0x6d, 0x6e, 0x21, 0x91, 0x2b, 0x51, 0xd1, 0x3d, 0x76,
	0x08, 0x4d, 0x2c, 0xc8, 0x4e, 0xe1, 0x9a, 0xd3, 0xbe, 0xe8, 0x92, 0x62, 0xd5, 0x0f, 0x8e, 0x6e,
	0x1d, 0xda, 0x30, 0x1d, 0xfe, 0x1b, 0xa4, 0xc4, 0xf9, 0xda, 0x8f, 0xd6, 0x53, 0xf0, 0x25, 0x19,
	0xa3, 0xa2, 0xe1, 0xde, 0xe0, 0x20, 0x38, 0x0a, 0xe9, 0xeb, 0x95, 0x61, 0x49, 0xc7, 0x60, 0xcf,
	0x61, 0x5c, 0x93, 0x76, 0xd1, 0xc8, 0xb2, 0xef, 0x10, 0xfb, 0x3f, 0xca, 0x26, 0x2d, 0x37, 0xfe,
	0xe5, 0x41, 0x98, 0xa0, 0xaa, 0x45, 0xa5, 0x5a, 0xf1, 0x76, 0x61, 0xa8, 0x34, 0xd7, 0x8d, 0x22,
	0xe1, 0x68, 0xc7, 0x1e, 0x43, 0x98, 0x89, 0xb2, 0x5e, 0xa0, 0x19, 0x30, 0xd5, 0x45, 0xe9, 0x7c,
	0x18, 0x24, 0x93, 0x0e, 0x9e, 0x17, 0xa5, 0x55, 0x1f, 0xa5, 0x14, 0x32, 0xcd, 0x44, 0xde, 0x26,
	0xc1, 0x22, 0xaf, 0x44, 0xde, 0x2b, 0x6b, 0xbc, 0xd2, 0xa4, 0xa1, 0x2b, 0xcf, 0xf1, 0x4a, 0xb3,
	0xbb, 0xe0, 0xd3, 0xa3, 0x92, 0x05, 0xa5, 0x76, 0xec, 0xde, 0x93, 0x2c, 0xe2, 0x9f, 0x1b, 0x10,
	0xcc, 0xb9, 0x9a, 0x99, 0xa7, 0x99, 0x89, 0x85, 0xc9, 0x6c, 0xd3, 0xb4, 0x16, 0xdb, 0x35, 0x8b,
	0x60, 0x24, 0xf1, 0x5b, 0x83, 0x4a, 0x93, 0xb7, 0xab, 0x2d, 0xdb, 0x87, 0xed, 0x55, 0x2c, 0x6c,
	0xd2, 0xdd, 0x68, 0x01, 0x61, 0xf6, 0xe5, 0xec, 0xc3, 0xb6, 0x72, 0x8a, 0xa5, 0x46, 0x3f, 0x1a,
	0x2f, 0x20, 0x6c, 0xbe, 0xac, 0x91, 0xbd, 0x84, 0x70, 0x45, 0x29, 0x9d, 0x64, 0x64, 0xef, 0xcd,
	0x75, 0xc9, 0x49, 0xcf, 0x64, 0xa2, 0xd6, 0xc3, 0x79, 0x0c, 0x53, 0x49, 0x92, 0xb7, 0x0d, 0x86,
	0xb6, 0xc1, 0x6e, 0xe7, 0x70, 0xdf, 0x91, 0x24, 0x94, 0xeb, 0xc0, 0xc9, 0xe8, 0x93, 0xfb, 0x2d,
	0x7d, 0x1e, 0xda, 0x9f, 0xd4, 0xb3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0x52, 0x20, 0xb9,
	0xb1, 0x04, 0x00, 0x00,
}
